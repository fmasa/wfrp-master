name: Build

on:
  # Runs on pushes targeting the default branch
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  # Needed for reading repository contents (read)
  # and uploading assets to Github Releases (write)
  contents: write
  # Needed for deploying to GitHub Pages
  pages: write
  # Needed for getting the OIDC token for the Github Pages deployment
  # See https://github.com/actions/deploy-pages?tab=readme-ov-file#oidc
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  conveyor:
    name: "Create desktop distributions"
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    env:
      CONVEYOR_AGREE_TO_LICENSE: "1"
      APP_VERSION: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build JAR
        run: ./gradlew jvmJar

      - name: Build desktop distributions
        uses: hydraulic-software/conveyor/actions/build@v17.0
        with:
          command: make site
          signing_key: ${{ secrets.SIGNING_KEY }}
          agree_to_license: 1
          cache_key: conveyor-${{ matrix.os }}-${{ matrix.arch }}

      - name: Extract download page files from output
        run: |
          mkdir -p pages_output/download
          mv output/download.html pages_output/download/index.html
          mv output/icon.png pages_output/download

      - name: Upload artifacts to Github Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload "$GITHUB_REF_NAME" output/* --clobber

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages_output

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
